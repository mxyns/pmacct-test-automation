---
version: '3'

networks:
  default:
    name: pmacct_test_network

services:
  zookeeper:
    image: remote-docker.artifactory.swisscom.com/confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181" not required cause we don't use zookeeper from outside the docker-compose network
    
  broker:
    image: remote-docker.artifactory.swisscom.com/confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
#      - "29092:29092" not required cause 29092 only gives out network-internal hostnames
      - "9092:9092"
    healthcheck:
      test: kafka-topics --bootstrap-server broker:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      
  schema-registry:
    image: remote-docker.artifactory.swisscom.com/confluentinc/cp-schema-registry:7.3.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - "8081:8081"
    healthcheck:
      test: curl --output /dev/null --silent --head --fail http://schema-registry:8081/subjects
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

# pmacct is deployed as a sepaarate container
#  pmacct:
#    image: remote-docker.artifactory.swisscom.com/pmacct/nfacctd:latest
#    container_name: pmacct
#    depends_on:
#      broker:
#        condition: service_healthy
#      schema-registry:
#        condition: service_healthy
#    ports:
#      - "2929:8989/udp"
#    volumes:
#      - ${PMACCTD_CONF}:/etc/pmacct/nfacctd.conf
#      - ${LIBRDKAFKA_CONF}:/etc/pmacct/maps_dev/librdkafka.conf
#      - ${OUT_AVRO_SCHEMA_CONF}:/var/log/pmacct/avsc/output_schema.avsc
